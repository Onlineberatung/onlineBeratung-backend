version: '3.7'
services:
    openldap:
      container_name: openldap
      image: osixia/openldap:1.4.0
      restart: on-failure
      ports:
        - 389:389
      env_file:
        - OpenLDAP/OpenLDAP.env
      networks:
        - ldap_network
      volumes:
        - openldap_data:/var/lib/ldap
        - ./OpenLDAP/slapd.d:/etc/ldap/slapd.d
        - ./OpenLDAP/config:/ob-config
        - /etc/localtime:/etc/localtime:ro
    mariadb:
      container_name: mariadb
      image: mariadb:10.5.10
      restart: on-failure
      ports:
        - 3306:3306
      env_file:
        - MariaDB/MariaDB.env
      networks:
        - database_network
      volumes:
        - ./MariaDB/init.sql:/docker-entrypoint-initdb.d/init.sql
        - mariadb_data:/var/lib/mysql
        - ./MariaDB/config:/etc/mysql/conf.d
        - /etc/localtime:/etc/localtime:ro
    adminer:
      container_name: adminer
      image: adminer:4.8.1
      restart: on-failure
      depends_on:
        - mariadb
      env_file:
        - Adminer/Adminer.env
      networks:
        - database_network
        - frontend_network
      volumes:
        - /etc/localtime:/etc/localtime:ro
    keycloak:
        container_name: keycloak
        image: jboss/keycloak:13.0.1
        restart: on-failure
        depends_on:
          - mariadb
        env_file:
          - Keycloak/Keycloak.env
        networks:
          - database_network
          - frontend_network
          - ldap_network
        volumes: 
          - ./Keycloak/caritas-theme:/opt/jboss/keycloak/themes/caritas-theme
          - ./Keycloak/logging/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml
          - /etc/localtime:/etc/localtime:ro
    mongodb:
        container_name: mongodb
        image: mongo:4.0.5
        command: --storageEngine mmapv1
        restart: on-failure
        env_file:
          - mongoDB/mongoDB.env
        networks:
          - rocket_database_network
        volumes:
          - ./mongoDB/init-nosqlclient-user.js:/docker-entrypoint-initdb.d/init-nosqlclient-user.js
          - ./mongoDB/setup:/setup
          - mongodb_data:/data/db
          - mongodb_configdb:/data/configdb
          - /etc/localtime:/etc/localtime:ro
    nosqlclient:
        container_name: nosqlclient
        image: mongoclient/mongoclient:4.0.1
        restart: on-failure
        depends_on:
          - mongodb
        env_file:
            - Nosqlclient/Nosqlclient.env
        networks:
          - rocket_database_network
          - frontend_network
        volumes:
          - /etc/localtime:/etc/localtime:ro
    rocketchat:
        container_name: rocketchat
        image: rocketchat/rocket.chat:3.14.4
        restart: on-failure
        depends_on:
          - mongodb
        env_file:
          - Rocket.Chat/Rocket.Chat.env
        networks:
          - rocket_database_network
          - frontend_network
          - ldap_network
        volumes:
          - ./Rocket.Chat/avatar_uploads:/app/uploads
          - /etc/localtime:/etc/localtime:ro
          - ./Rocket.Chat/user_uploads:/app/user_uploads
    userservice:
        container_name: userservice
        image: $USER_SERVICE_IMAGE:$USER_SERVICE_VERSION
        restart: on-failure
        depends_on:
          - rocketchat
        networks:
          - database_network
          - frontend_network
          - service_network
        volumes:
          - ./UserService/log:/log
          - ./UserService/import:/import
          - ./UserService/firebase:/firebase
          - ./UserService/report:/report
          - userservice_tmp:/tmp
          - /etc/localtime:/etc/localtime:ro
        env_file:
          - ./UserService/UserService.env
        extra_hosts:
          - "<app_domain>:<internal_server_ip_address>"
    agencyservice:
        container_name: agencyservice
        image: $AGENCY_SERVICE_IMAGE:$AGENCY_SERVICE_VERSION
        networks:
          - database_network
          - frontend_network
          - service_network
        volumes:
          - ./AgencyService/log:/log
          - agencyservice_tmp:/tmp
          - /etc/localtime:/etc/localtime:ro
        env_file:
          - ./AgencyService/AgencyService.env
        extra_hosts:
          - "<app_domain>:<internal_server_ip_address>"
    messageservice:
        container_name: messageservice
        image: $MESSAGE_SERVICE_IMAGE:$MESSAGE_SERVICE_VERSION
        restart: on-failure
        depends_on:
          - rocketchat
        networks:
          - database_network
          - frontend_network
          - service_network
        volumes:
          - ./MessageService/log:/log
          - messageservice_tmp:/tmp
          - /etc/localtime:/etc/localtime:ro
        env_file:
          - ./MessageService/MessageService.env
        extra_hosts:
          - "<app_domain>:<internal_server_ip_address>"
    mailservice:
      container_name: mailservice
      image: $MAIL_SERVICE_IMAGE:$MAIL_SERVICE_VERSION
      restart: on-failure
      networks:
        - service_network
      volumes:
        - ./MailService/log:/log
        - mailservice_tmp:/tmp
        - /etc/localtime:/etc/localtime:ro
      env_file:
        - ./MailService/MailService.env
      extra_hosts:
        - "<app_domain>:<internal_server_ip_address>"
    uploadservice:
      container_name: uploadservice
      image: $UPLOAD_SERVICE_IMAGE:$UPLOAD_SERVICE_VERSION
      restart: on-failure
      depends_on:
        - rocketchat
      networks:
        - frontend_network
        - service_network
        - database_network
      volumes:
        - ./UploadService/log:/log
        - uploadservice_tmp:/tmp
        - /etc/localtime:/etc/localtime:ro
      env_file:
        - ./UploadService/UploadService.env
      extra_hosts:
        - "<app_domain>:<internal_server_ip_address>"
    liveservice:
      container_name: liveservice
      image: $LIVE_SERVICE_IMAGE:$LIVE_SERVICE_VERSION
      restart: "no"
      networks:
        - frontend_network
        - service_network
      volumes:
        - ./LiveService/log:/log
        - liveservice_tmp:/tmp
        - /etc/localtime:/etc/localtime:ro
      env_file:
        - ./LiveService/LiveService.env
      extra_hosts:
        - "<app_domain>:<internal_server_ip_address>"
    consultingtypeservice:
      container_name: consultingtypeservice
      image: $CONSULTING_TYPE_SERVICE_IMAGE:$CONSULTING_TYPE_SERVICE_VERSION
      restart: "no"
      networks:
        - frontend_network
        - service_network
      volumes:
        - ./ConsultingTypeService/consulting-type-settings:/consulting-type-settings
        - ./ConsultingTypeService/log:/log
        - consultingtypeservice_tmp:/tmp
        - /etc/localtime:/etc/localtime:ro
      env_file:
        - ./ConsultingTypeService/ConsultingTypeService.env
      extra_hosts:
        - "<app_domain>:<internal_server_ip_address>"
    videoservice:
      container_name: videoservice
      image: $VIDEO_SERVICE_IMAGE:$VIDEO_SERVICE_VERSION
      restart: "no"
      networks:
        - frontend_network
        - service_network
      volumes:
        - ./VideoService/log:/log
        - videoservice_tmp:/tmp
        - /etc/localtime:/etc/localtime:ro
      env_file:
        - ./VideoService/VideoService.env
      extra_hosts:
        - "<app_domain>:<internal_server_ip_address>"
    statisticsservice:
      container_name: statisticsservice
      image: $STATISTICS_SERVICE_IMAGE:$STATISTICS_SERVICE_VERSION
      restart: "no"
      networks:
        - frontend_network
        - service_network
        - rocket_database_network
      volumes:
        - ./StatisticsService/log:/log
        - statisticsservice_tmp:/tmp
        - /etc/localtime:/etc/localtime:ro
      env_file:
        - ./StatisticsService/StatisticsService.env
      extra_hosts:
        - "<app_domain>:<internal_server_ip_address>"
    rabbitmq:
      container_name: rabbitmq
      hostname: <app_domain>
      image: rabbitmq:3.8.18-alpine
      restart: on-failure
      ports:
        - '5672:5672'
        - '15672:15672'
      networks:
        - service_network
      volumes:
        - ./RabbitMQ/config/:/etc/rabbitmq/
        - ./RabbitMQ/logs/:/var/log/rabbitmq/
        - ./RabbitMQ/mnesia/:/var/lib/rabbitmq/mnesia
    frontend:
      container_name: frontend
      image: $FRONTEND_IMAGE:$FRONTEND_VERSION
      restart: on-failure
      volumes:
        - ./frontend/log:/var/log/nginx
        - /etc/localtime:/etc/localtime:ro
      networks:
          - frontend_network
    proxy:
        container_name: nginx
        image: $NGINX_SERVICE_IMAGE:$NGINX_SERVICE_VERSION
        restart: on-failure
        env_file:
          - nginx/nginx.env
        ports:
          - 80:80
          - 443:443
          - 3000:3000
          - 3001:3001
          - 3002:3002
        volumes:
          - ./nginx/conf:/etc/nginx
          - ./nginx/log:/var/log/nginx
          - ./nginx/www:/usr/share/nginx/html
          - ./nginx/ssl:/etc/nginx/ssl
          - /etc/localtime:/etc/localtime:ro
          - ./nginx/conf/locations:/etc/nginx/locations
          - ./nginx/conf/server:/etc/nginx/server
          - ./nginx/conf/nginx-logrotate:/etc/nginx-logrotate
        networks:
          - frontend_network
        depends_on:
          - adminer
          - nosqlclient
          - rocketchat
          - frontend
networks:
  database_network:
  rocket_database_network:
  frontend_network:
  ldap_network:
  service_network:
volumes:
  mariadb_data:
  mongodb_data:
  mongodb_configdb:
  rocketchat_data:
  openldap_data:
  userservice_tmp:
  agencyservice_tmp:
  messageservice_tmp:
  mailservice_tmp:
  uploadservice_tmp:
  liveservice_tmp:
  consultingtypeservice_tmp:
  videoservice_tmp:
  statisticsservice_tmp: